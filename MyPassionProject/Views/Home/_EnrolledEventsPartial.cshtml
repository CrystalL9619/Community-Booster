
@foreach (var relatedEvent in Model.RelatedEvents)
{
    <div class="col">
        <div class="eachone" style="display:flex; flex-wrap: wrap; flex-direction:column">
            <div class="event">
                <div class="card" style="background-image: url('@(relatedEvent.ImagePath)?v=@DateTime.UtcNow.Ticks');">
                    <div class="content">
                        <h4 id="eventTitle">@relatedEvent.Title</h4>
                        <h5>Location:</h5>
                        <p id="eventLocation">@relatedEvent.Location</p>
                        <h5>Date:</h5>
                        <p id="eventDate">@relatedEvent.EventDateTime</p>
                        <h5>Capacity:</h5>
                        <p id="eventCapacity">@relatedEvent.Capacity</p>
                    </div>
                </div>
                <div class="details">
                    <p class="threeD">Details:</p>
                    <p class="breakdown threeD">
                        <span class="trimmedDetails">@relatedEvent.Details</span>
                        <a href="/Event/Find/@relatedEvent.EventId">See More</a>
                    </p>
                </div><!-- end of details -->
            </div><!-- end of event -->

            @if (User.Identity.IsAuthenticated)
            {
                <div class="button-container">
                    <button class="button-no" id="unassoc" data-event-id="@relatedEvent.EventId">Cancel</button>
                </div>
            }
        </div><!-- end of eachone -->
    </div><!-- end of col -->
}

<script>
  
        console.log("enrolled page loaded");

        // Unassociate event handler
        $(document).on('click', '.button-no', function(event) {
            event.preventDefault();
            console.log("try to unassoc");
            const eventId = $(this).data('event-id');
            let url = "@MyPassionProject.Models.Constant.BaseUrl" + "EventData/UnAssociateEventWithApplicationUser/" + eventId + "/" + "@Model.CurrentUserId";
            console.log('unassoc url', url);
            fetch(url, { method: 'POST' })
                .then(res => {
                    if (res.ok) {
                        alert("What a pity! Hope to see you in another event!");
                        location.reload();
                    } else {
                        throw new Error('Network response was not ok');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("Something went wrong, please try later!");
                });
        });

        // Text trimming function
        function trimText(element) {
            const fullText = element.innerText;
            const words = fullText.trim().split(/\s+/);
            if (words.length > 10) {
                const trimmedText = words.slice(0, 10).join(' ') + '...';
                element.innerText = trimmedText;
            }
        }

        // Apply text trimming to elements
        $('.trimmedDetails').each(function() {
            trimText(this);
        });
    

  
</script>

